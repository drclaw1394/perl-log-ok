v0.2.0 2023-07-25
  [features]
    - Reduced the amount of boilerplate with sensible default options
    - Die when logging level is not supported.  Prevents a bunch of error messages
    - Default command line option is now 'verbose'. Specify an 'undef' to
      disable
  [changes]
    - POD synopsis example revised.
    - uses constant::more v0.2.0 for a little memory saving


v0.1.6 2023-02-11
  [fixes]
  - Remove annoying warning message re failed log level sync
  - Reworked automatic log level synchronisation for Log::ger when scripts are
    being required instead of used
  - Clean up changes file

v0.1.5 2022-12-02

  - Attempt automatic log level synchronisation for Log::ger

  - Log::ger and Log::Any detection changes.
    Detection now only checks for these packages, not an output or adaptor
    package like Log::ger::Output or Log::Any::Adaptor. Allows top level
    application to choose output after Log::OK is used.

  - Adjusted POD synopsis to show output can be selected after use Log::OK
  
  - More POD changes


v0.1.4 2022-06-09

  - Fixed missing WARN constant when no system detected
	- Tidy pod
	- Change pod examples to show Log::ger because its easier


v0.1.3 

  - If auto detect fails, creates constants for all supported frameworks
  - Changed unknown command line level setting to carp instead of croak
    to allow multiple frameworks to interoperate

v0.1.2  2022-05-30

  - Disabled tests requiring installation of logging modules
  - Fixed an issue where no hash specified at main program level
    prevented autodetection of logging system in other modules
    with no hash specified

v0.1.1  2022-04-15
	
	- Fixed tests calling wrong perl command
	- Fixed list context/ state issue on 5.24 and 5.26

v0.1.0  2022-04-14

  - Original release
  - Using constant::more for backend
  - Sets up constants for each logging level of detected/supported logging
  system to allow compile time disabling in conditional structures
